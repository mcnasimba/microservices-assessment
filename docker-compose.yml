services:
  db :
    image: postgres:16.1
    container_name: db-microservices
    restart: always
    volumes:
      - ./sql/BaseDatos.sql:/docker-entrypoint-initdb.d/BaseDatos.sql
      - ./sql/data.sql:/docker-entrypoint-initdb.d/data.sql
    environment:
      POSTGRES_DB: 'microservices-assessment'
      POSTGRES_USER: 'devMCN'
      POSTGRES_PASSWORD: 'm!srv2025@'
    ports:
      - '5433:5432'
    networks:
      - msvc_assessment

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: devMCN
      RABBITMQ_DEFAULT_PASS: m!srv2025@
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - msvc_assessment

  msvc-clients:
    container_name: msvc-clients
    build:
      context: ./
      dockerfile: ./msvc-clients/Dockerfile
    ports:
      - "3001:3001"
    environment:
      PORT: 3001
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - msvc_assessment

  msvc-accounts:
    container_name: msvc-accounts
    build:
      context: ./
      dockerfile: ./msvc-accounts/Dockerfile
    ports:
      - "3002:3002"
    environment:
      PORT: 3002
    networks:
      - msvc_assessment

networks:
  msvc_assessment:
    name: msvc_assessment